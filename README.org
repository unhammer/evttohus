Various scripts and such used to create dictionary candidates for
nob2smj and nob2sma from nob2sme dictionary + corpora.

* Prerequisites
  The main prerequisites are

  - [[http://giellatekno.uit.no/doc/ling/CorpusTools.html][CorpusTools]]
  - the sme/nob/sma/smj analysers from $GTHOME/langs
  - all sme/nob/sma/smj-related folders from $GTHOME/words/dicts

  See [[http://giellatekno.uit.no/doc/infra/GettingStarted.html]] for how
  to set things up – there's no need to mess up your ~/.bashrc, but
  you'll need to set at least the $GTHOME/$GTFREE/$GTCORE (optionally
  $GTBOUND) variables, and for now the Xerox tools (xfst/lookup etc.)
  are needed.

* Running the candidate generation

  Run =make= to make the stuff; the first time around you need to also
  run =make corpus=.

** Output file format

   The results will appear in the =out/= directory, where e.g.
  =out/smesmj= has a two-column format where the first word is a sme
  input and the second is a smj candidate.

  The files in =out/nobsmjsme= and =out/nobsmasme= include both nob
  and sme translations for the candidates, annotated with normalised
  frequencies for all the three words. The format is, tab-separated:

  : nob 	candidate	sme	fr_nob	fr_candidate	fr_sme	para_hits

** Output filename format
   
  The filenames have this format:
  : PoS_method_sourcelang_inFST
  where =PoS= is part of speech (V, N, A or nonVNA for "the rest") and
  =method= is one of

  - decomp :: input is compound analysed, parts are translated with
    existing dictionaries and glued back together
  - precomp :: existing dictionaries are compound analysed to create a
    dictionary of compound-part-translations; then input is compound
    analysed, parts are translated using the decompounded
    dictionaries, and glued back together
  - anymalign :: from parallel word alignment (see para/anymalign)
  - xfst :: using =$GTHOME/words/dicts/smesmj/scripts/sme2smj-$PoS.fst=
  - lexc :: using =$GTHOME/words/dicts/smesmj/bin/smesmj.fst=

  The =sourcelang= is the input for the method (nob or sme), while
  =inFST= is "ana" or "noana" depending on whether the word had an
  analysis _with the right PoS_ in
  =$GTHOME/langs/${lang}/src/analyser-gt-desc.xfst=.
  
** Running the parallel word alignment
   Follow [[file:para/anymalign/README.org][para/anymalign/README.org]] to run the alignment. To get them
   into the same format as the other files, in this directory do
   : make anymalign
   : make
   You should now have some files in =out/nob*sme/*anymalign*=

** Running the candidate-respelling
  … currently uses some ocaml stuff, TODO

* TODO stuff
See [[file:TODO.org][TODO.org]].
